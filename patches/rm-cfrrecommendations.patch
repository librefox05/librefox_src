diff --git a/browser/components/preferences/main.js b/browser/components/preferences/main.js
index a60831d..97308e4 100644
--- a/browser/components/preferences/main.js
+++ b/browser/components/preferences/main.js
@@ -378,18 +378,6 @@ let SETTINGS_CONFIG = {
         l10nId: "browsing-media-control",
         supportPage: "media-keyboard-control",
       },
-      {
-        id: "cfrRecommendations",
-        l10nId: "browsing-cfr-recommendations",
-        supportPage: "extensionrecommendations",
-        subcategory: "cfraddons",
-      },
-      {
-        id: "cfrRecommendations-features",
-        l10nId: "browsing-cfr-features",
-        supportPage: "extensionrecommendations",
-        subcategory: "cfrfeatures",
-      },
       {
         id: "linkPreviewEnabled",
         l10nId: "link-preview-settings-enable",
@@ -524,9 +512,9 @@ var gMainPane = {
             window.requestIdleCallback(pollForDefaultBrowser);
           },
           backoffTimes[
-            this._backoffIndex + 1 < backoffTimes.length
-              ? this._backoffIndex++
-              : backoffTimes.length - 1
+          this._backoffIndex + 1 < backoffTimes.length
+            ? this._backoffIndex++
+            : backoffTimes.length - 1
           ]
         );
       };
@@ -571,7 +559,7 @@ var gMainPane = {
         let ver = parseFloat(Services.sysinfo.getProperty("version"));
         let showTabsInTaskbar = document.getElementById("showTabsInTaskbar");
         showTabsInTaskbar.hidden = ver < 6.1;
-      } catch (ex) {}
+      } catch (ex) { }
     }
 
     let thumbsCheckbox = document.getElementById("tabPreviewShowThumbnails");
@@ -2121,7 +2109,7 @@ var gMainPane = {
     if (Services.prefs.getBoolPref("intl.multilingual.liveReload")) {
       if (
         Services.intl.getScriptDirection(newLocales[0]) !==
-          Services.intl.getScriptDirection(appLocalesAsBCP47[0]) &&
+        Services.intl.getScriptDirection(appLocalesAsBCP47[0]) &&
         !Services.prefs.getBoolPref("intl.multilingual.liveReloadBidirectional")
       ) {
         // Bug 1750852: The directionality of the text changed, which requires a restart
@@ -3725,8 +3713,8 @@ var gMainPane = {
     document.getElementById("downloadFolder").disabled =
       document.getElementById("chooseFolder").disabled =
       document.getElementById("saveTo").disabled =
-        Preferences.get("browser.download.dir").locked ||
-        Preferences.get("browser.download.folderList").locked;
+      Preferences.get("browser.download.dir").locked ||
+      Preferences.get("browser.download.folderList").locked;
     // don't override the preference's value in UI
     return undefined;
   },
@@ -4014,14 +4002,14 @@ function getFileDisplayName(file) {
     if (file instanceof Ci.nsILocalFileWin) {
       try {
         return file.getVersionInfoField("FileDescription");
-      } catch (e) {}
+      } catch (e) { }
     }
   }
   if (AppConstants.platform == "macosx") {
     if (file instanceof Ci.nsILocalFileMac) {
       try {
         return file.bundleDisplayName;
-      } catch (e) {}
+      } catch (e) { }
     }
   }
   return file.leafName;
@@ -4294,7 +4282,7 @@ class HandlerInfoWrapper {
         if (url) {
           return url + "?size=16";
         }
-      } catch (ex) {}
+      } catch (ex) { }
     }
 
     // If this isn't a MIME type object on an OS that supports retrieving
@@ -4366,7 +4354,7 @@ class HandlerInfoWrapper {
     // and always return true in that case to override this invalid value.
     if (
       this.wrappedHandlerInfo.preferredAction ==
-        Ci.nsIHandlerInfo.useHelperApp &&
+      Ci.nsIHandlerInfo.useHelperApp &&
       !gMainPane.isValidHandlerApp(this.preferredApplicationHandler)
     ) {
       if (this.wrappedHandlerInfo.hasDefaultHandler) {
@@ -4412,7 +4400,7 @@ class HandlerInfoWrapper {
       ) {
         return this.wrappedHandlerInfo.primaryExtension;
       }
-    } catch (ex) {}
+    } catch (ex) { }
 
     return null;
   }
